generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model country {
  id        String     @id @unique @default(uuid())
  name      String     @unique
  isActive  Boolean    @default(true)
  createdBy String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  district  district[]
}

model town {
  id         String   @id @unique @default(uuid())
  name       String
  districtId String
  isActive   Boolean  @default(true)
  createdBy  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  entity     entity[]
  district   district @relation(fields: [districtId], references: [id])

  @@unique([name, districtId])
  @@index([districtId], map: "town_districtId_fkey")
}

model district {
  id        String   @id @unique @default(uuid())
  name      String
  countryId String
  isActive  Boolean  @default(true)
  createdBy String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  country   country  @relation(fields: [countryId], references: [id])
  town      town[]

  @@unique([name, countryId])
  @@index([countryId], map: "district_countryId_fkey")
}

model site {
  id        String    @id @unique @default(uuid())
  name      String
  typeSite  SITE_TYPE @default(FIELD)
  entityId  String
  isActive  Boolean   @default(true)
  createdBy String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  entity    entity    @relation(fields: [entityId], references: [id])

  @@unique([name, entityId])
  @@index([entityId], map: "site_entityId_fkey")
}

model customer {
  id                String              @id @unique @default(uuid())
  name              String              @unique
  email             String
  phone             String
  isActive          Boolean             @default(true)
  createdBy         String
  createdAt         DateTime            @default(now())
  updateAt          DateTime            @updatedAt
  clientBankAccount clientbankaccount[]
}

model grade {
  id        String     @id @unique @default(uuid())
  name      String     @unique
  isActive  Boolean    @default(true)
  createdBy String
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  employees employee[]
}

model echelon {
  id        String     @id @unique @default(uuid())
  name      String     @unique
  isActive  Boolean    @default(true)
  createdBy String
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  employees employee[]
}

model category {
  id        String     @id @unique @default(uuid())
  name      String     @unique
  isActive  Boolean    @default(true)
  createdBy String
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  employees employee[]
}

model entity {
  id                 String              @id @unique @default(uuid())
  name               String              @unique
  localisation       String
  phone              String
  townId             String
  isActive           Boolean             @default(true)
  createdBy          String
  createdAt          DateTime            @default(now())
  updateAt           DateTime            @updatedAt
  article            article[]
  departements       department[]
  employees          employee[]
  towns              town                @relation(fields: [townId], references: [id])
  entityBankAccounts entitybankaccount[]
  shifts             shift[]
  sites              site[]
  suppliers          supplier[]

  @@index([townId], map: "entity_townId_fkey")
}

model employee {
  id                  String               @id @unique @default(uuid())
  email               String?              @unique
  phone               String?              @unique
  name                String?              @unique
  picture             String?
  functionId          String?
  gradeId             String?
  echelonId           String?
  categoryId          String?
  userId              String               @unique
  entityId            String
  createdBy           String
  updatedBy           String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  isActive            Boolean              @default(true)
  category            category?            @relation(fields: [categoryId], references: [id])
  echelon             echelon?             @relation(fields: [echelonId], references: [id])
  entity              entity               @relation(fields: [entityId], references: [id])
  function            Renamedfunction?     @relation(fields: [functionId], references: [id])
  grade               grade?               @relation(fields: [gradeId], references: [id])
  employeePermissions employeepermission[]
  employeeRoles       employeerole[]

  @@index([categoryId], map: "employee_categoryId_fkey")
  @@index([echelonId], map: "employee_echelonId_fkey")
  @@index([entityId], map: "employee_entityId_fkey")
  @@index([functionId], map: "employee_functionId_fkey")
  @@index([gradeId], map: "employee_gradeId_fkey")
}

model employeepermission {
  id           String     @id @unique @default(uuid())
  employeeId   String
  permissionId String
  isActive     Boolean    @default(true)
  createdBy    String
  updatedBy    String?
  createdAt    DateTime   @default(now())
  updateAt     DateTime   @updatedAt
  employee     employee   @relation(fields: [employeeId], references: [id])
  permission   permission @relation(fields: [permissionId], references: [id])

  @@index([employeeId], map: "employeepermission_employeeId_fkey")
  @@index([permissionId], map: "employeepermission_permissionId_fkey")
}

model applicationpermission {
  id            String   @id @unique @default(uuid())
  applicationId String
  permissionId  String
  isActive      Boolean  @default(true)
  createdBy     String
  updatedBy     String?
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt

  @@index([applicationId], map: "applicationpermission_applicationId_fkey")
  @@index([permissionId], map: "applicationpermission_permissionId_fkey")
}

model employeerole {
  id         String   @id @unique @default(uuid())
  employeeId String
  roleId     String
  isActive   Boolean  @default(true)
  createdBy  String
  updatedBy  String?
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  employee   employee @relation(fields: [employeeId], references: [id])
  role       role     @relation(fields: [roleId], references: [id])

  @@index([employeeId], map: "employeerole_employeeId_fkey")
  @@index([roleId], map: "employeerole_roleId_fkey")
}

model permission {
  id                  String               @id @unique @default(uuid())
  permissionName      String
  displayName         String
  description         String?
  createdBy           String
  updatedBy           String?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  isActive            Boolean              @default(true)
  employeePermissions employeepermission[]
}

model permissionrole {
  id           String   @id @unique @default(uuid())
  permissionId String
  roleId       String
  isActive     Boolean  @default(true)
  createdBy    String
  updatedBy    String?
  createdAt    DateTime @default(now())
  updateAt     DateTime @updatedAt

  @@index([permissionId], map: "permissionrole_permissionId_fkey")
  @@index([roleId], map: "permissionrole_roleId_fkey")
}

model role {
  id            String         @id @unique @default(uuid())
  roleName      String
  displayName   String
  description   String?
  createdBy     String
  updatedBy     String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isActive      Boolean        @default(true)
  employeeRoles employeerole[]
}

model application {
  id          String   @id @unique @default(uuid())
  name        String
  url         String
  image       String?
  description String?
  isActive    Boolean  @default(true)
  createdBy   String
  updatedBy   String?
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model supplier {
  id        String   @id @unique @default(uuid())
  name      String   @unique
  email     String
  phone     String
  entityId  String
  isActive  Boolean  @default(true)
  createdBy String
  updatedBy String?
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  entity    entity   @relation(fields: [entityId], references: [id])

  @@index([entityId], map: "supplier_entityId_fkey")
}

model article {
  id              String          @id @unique @default(uuid())
  name            String
  price           Float           @default(0)
  hasTVA          Boolean         @default(false)
  type            ARTICLE_TYPE
  idEntity        String
  isActive        Boolean         @default(true)
  createdBy       String
  updatedBy       String?
  createdAt       DateTime        @default(now())
  updateAt        DateTime        @updatedAt
  idArticleFamily String?
  code            String?
  articleFamilyId article_family? @relation(fields: [idArticleFamily], references: [id])
  entity          entity          @relation(fields: [idEntity], references: [id])

  @@index([idEntity], map: "article_idEntity_fkey")
  @@index([idArticleFamily], map: "article_idArticleFamily_fkey")
}

model article_family {
  id          String    @id @unique @default(uuid())
  name        String
  code        String
  description String?
  isActive    Boolean   @default(true)
  createdBy   String
  updatedBy   String?
  createdAt   DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  articles    article[]
}

model shift {
  id        String   @id @unique @default(uuid())
  name      String?  @unique
  startTime String
  endTime   String
  entityId  String
  isActive  Boolean  @default(true)
  createdBy String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  entity    entity   @relation(fields: [entityId], references: [id])

  @@unique([startTime, endTime])
  @@index([entityId], map: "shift_entityId_fkey")
}

model department {
  id        String    @id @unique @default(uuid())
  name      String
  entityId  String
  isActive  Boolean   @default(true)
  createdBy String
  createdAt DateTime  @default(now())
  updateAt  DateTime  @updatedAt
  entity    entity    @relation(fields: [entityId], references: [id])
  services  service[]

  @@index([entityId], map: "department_entityId_fkey")
}

model service {
  id           String     @id @unique @default(uuid())
  name         String
  departmentId String
  isActive     Boolean    @default(true)
  createdBy    String
  createdAt    DateTime   @default(now())
  updateAt     DateTime   @updatedAt
  department   department @relation(fields: [departmentId], references: [id])

  @@index([departmentId], map: "service_departmentId_fkey")
}

model bank {
  id                String              @id @unique @default(uuid())
  name              String              @unique
  address           String
  phone             String
  isActive          Boolean             @default(true)
  createdBy         String
  createdAt         DateTime            @default(now())
  updateAt          DateTime            @updatedAt
  clientBankAccount clientbankaccount[]
  entityBankAccount entitybankaccount[]
}

model clientbankaccount {
  id            String   @id @unique @default(uuid())
  accountNumber String
  bankId        String
  clientId      String
  isActive      Boolean  @default(true)
  createdBy     String
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt
  bank          bank     @relation(fields: [bankId], references: [id])
  customer      customer @relation(fields: [clientId], references: [id])

  @@index([bankId], map: "clientbankaccount_bankId_fkey")
  @@index([clientId], map: "clientbankaccount_clientId_fkey")
}

model entitybankaccount {
  id            String   @id @unique @default(uuid())
  accountNumber String
  bankId        String
  entityId      String
  isActive      Boolean  @default(true)
  createdBy     String
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt
  bank          bank     @relation(fields: [bankId], references: [id])
  entity        entity   @relation(fields: [entityId], references: [id])

  @@index([bankId], map: "entitybankaccount_bankId_fkey")
  @@index([entityId], map: "entitybankaccount_entityId_fkey")
}

model Renamedfunction {
  id        String     @id @unique @default(uuid())
  name      String     @unique(map: "Function_name_key")
  isActive  Boolean    @default(true)
  createdBy String
  createdAt DateTime   @default(now())
  updateAt  DateTime   @updatedAt
  employees employee[]

  @@map("function")
}

enum SITE_TYPE {
  HEADQUARTER
  FIELD
}

enum ARTICLE_TYPE {
  PRODUCT
  EQUIPEMENT
}
